{"version":3,"sources":["components/Chart/Chart.module.css","components/Weather.module.css","components/Cards/Cards.jsx","components/Api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","components/Navbar.js","components/Home.js","components/ForeCast/ForeCast.jsx","components/WeatherNav.js","components/Weather-Form/WeatherForm.jsx","components/Weather.js","components/Country/Country.js","App.js","serviceWorker.js","index.js","components/Cards/cards.module.css","components/Home.module.css","components/Country/Country.module.css","components/pictures/Clouds.jpg","components/CountryPicker/CountryPicker.module.css","components/pictures/drizzle.jpg","components/pictures/foggy.jpg","components/pictures/rain.jpg","components/pictures/sunny.jpg","components/pictures/snow.jpg","components/pictures/thunderstorm.jpg","components/ForeCast/ForeCast.module.css"],"names":["module","exports","Cards","data","date","console","log","country","TotalConfirmed","className","styles","container","Grid","spacing","justify","item","component","Card","xs","md","cx","card","infected","CardContent","Typography","color","gutterBottom","variant","start","end","duration","separator","Date","toString","recovered","TotalRecovered","toDateString","deaths","TotalDeaths","fetchDailyData","a","axios","get","modifiedData2","map","dailyData","confirmed","total","reportDate","Charts","useState","setDailyData","useEffect","fetchApi","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","CountryPicker","state","countries","Axios","then","response","Countries","setState","this","countryList","index","key","to","Country","style","whiteSpace","width","height","marque","direction","speed","Component","Navbar","href","src","alt","fontSize","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Home","props","match","params","Global","heading","stats","Chart","ForeCast","temperature","city","humidity","pressure","error","icon","image","minTemp","maxTemp","feels","description","cloudiness","rain","visibility","sunrise","sunset","windSpeed","windDirection","clicked","position","borderBottom","CardActionArea","display","justifyContent","CardMedia","title","Box","top","fontWeight","slice","fontStyle","margin","charAt","toUpperCase","gutterbottom","marginLeft","WeatherForm","onSubmit","loadweather","contentAlign","autoComplete","name","value","City","placeholder","api_key","api_base","weatherIcon","Weather","handleChange","e","target","preventDefault","fetchdata","get_WeatherIcon","rangeId","thunderstorm","drizzle","snow","foggy","sunny","cloudy","sys","main","temp","temp_min","temp_max","feels_like","wind","deg","clouds","all","weather","dt","WeatherNav","barChar","Totaldeaths","options","legend","text","marginTop","bbar","App","exact","path","Boolean","window","location","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","message"],"mappings":"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","file":"static/js/main.f6b62351.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__2dgZJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Weather_container__12ElW\"};","import React from 'react'; \r\nimport { Card,CardContent,Typography,Grid} from '@material-ui/core';\r\nimport styles from './cards.module.css';\r\nimport CountUp from 'react-countup';\r\nimport cx from 'classnames';\r\n\r\n\r\n\r\nconst Cards =({data}) => {\r\n    const date=data.date;\r\n    console.log(data.country);\r\n    if (!data.country.TotalConfirmed){\r\n        return 'Loading...';\r\n    }\r\n    return (\r\n\r\n        <div className={styles.container}>\r\n            <Grid container spacing={4} justify='center'>\r\n                <Grid item component={Card} xs={12}  md={3} className={cx(styles.card,styles.infected)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Infected</Typography>\r\n                        <Typography variant='h5'><CountUp start={0} end={data.country.TotalConfirmed} duration={2} separator = \",\"></CountUp></Typography>\r\n                        <Typography color='textSecondary'>{new Date(date).toString()}</Typography>\r\n                        <Typography variant='body2'>Number of active cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12}  md={3} className={cx(styles.card,styles.recovered)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Recovered</Typography>\r\n                        <Typography variant='h5'><CountUp start={0} end={data.country.TotalRecovered} duration={2.5} separator=\",\"></CountUp></Typography>\r\n                        <Typography color='textSecondary'>{new Date(date).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of recovered cases</Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n                <Grid item component={Card} xs={12}  md={3} className={cx(styles.card,styles.deaths)}>\r\n                    <CardContent>\r\n                        <Typography color='textSecondary' gutterBottom>Deaths</Typography>\r\n                        <Typography variant='h5'><CountUp start={0} end={data.country.TotalDeaths} duration={2.5} separator=\",\"></CountUp></Typography>\r\n                        <Typography color='textSecondary'>{new Date(date).toDateString()}</Typography>\r\n                        <Typography variant='body2'>Number of deaths </Typography>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Cards;","import axios from 'axios';\r\nconst url2='https://covid19.mathdro.id/api/daily';\r\nexport const fetchDailyData= async () => {\r\n    try {\r\n        const {data} = await axios.get(url2);\r\n        \r\n        const modifiedData2 = data.map((dailyData) =>({\r\n           confirmed: dailyData.confirmed.total,\r\n           deaths: dailyData.deaths.total,\r\n           date: dailyData.reportDate,\r\n        }));\r\n        return modifiedData2;\r\n    } catch (error) {\r\n        console.log(error);\r\n        \r\n    }\r\n}\r\n","import React,{useState,useEffect} from 'react'; \r\nimport {fetchDailyData} from '../Api';\r\nimport {Line} from 'react-chartjs-2';\r\nimport styles from './Chart.module.css';\r\n\r\nconst Charts =() => {\r\n    const [dailyData,setDailyData] = useState([]);\r\n    useEffect(() =>{\r\n       const fetchApi = async () =>{\r\n           setDailyData(await fetchDailyData());\r\n\r\n       }\r\n       fetchApi();\r\n    });\r\n\r\n    const lineChart = (\r\n        dailyData.length\r\n        ?(<Line \r\n        data={{\r\n            labels:dailyData.map(({ date }) => date),\r\n            datasets: [ {\r\n             data: dailyData.map(({ confirmed }) => confirmed),\r\n             label: 'Infected',\r\n             borderColor: '#3333ff',\r\n             fill: true,   \r\n            } , {\r\n             data: dailyData.map(({ deaths }) => deaths),\r\n             label: 'Deaths',\r\n             borderColor: 'red',\r\n             backgroundColor:'rgba(2555,0,0,0.5)',\r\n             fill: true,\r\n           }],\r\n\r\n        }} >\r\n        </Line> ) : null\r\n\r\n    );\r\n    return (\r\n        <div className={styles.container}>\r\n            {lineChart}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Charts;","import React, {Component} from 'react'; \r\nimport styles from './CountryPicker.module.css';\r\nimport Marquee from 'react-double-marquee';\r\nimport { Link } from 'react-router-dom';\r\nimport Axios from 'axios';\r\n\r\n\r\nclass CountryPicker extends Component {\r\n    state = {\r\n        countries:[]\r\n    }\r\n    componentDidMount(){\r\n        Axios.get('https://api.covid19api.com/summary')\r\n        .then(response => {\r\n                console.log(response.data.Countries);\r\n                this.setState({\r\n                    countries:response.data.Countries\r\n\r\n                })\r\n            }\r\n        )\r\n    }\r\n    render(){\r\n        const {countries}=this.state;\r\n        const countryList= countries.length ? (countries.map((country,index)=>{\r\n            return(\r\n            <span className={styles.country} key={index}>\r\n                <span><Link to={'/country/'+index}><span className={styles.label}>{country.Country}&nbsp;&nbsp;&nbsp;&nbsp;{country.TotalConfirmed}</span></Link></span>\r\n            </span>\r\n            )\r\n                \r\n\r\n        }) ): (<p>Loading...</p>)\r\n        return (\r\n            <div style={{whiteSpace:\"nowrap\",width:'90%', height:'50px'}}>\r\n            <Marquee className={styles.marque} direction='left' speed='0.05' >{countryList}</Marquee>\r\n            </div>\r\n\r\n        )}\r\n   \r\n        \r\n}\r\n\r\nexport default CountryPicker;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst Navbar = () =>{\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light blue lighten-1\" style={{height:'90px'}}>\r\n        <a className=\"navbar-brand text-white display-6\" href=\"#\"> \r\n        <img src=\"https://img.icons8.com/nolan/64/coronavirus.png\" className=\"d-inline-block align-top\" alt=\"\" /><span style={{fontSize:'25px'}}>Covid19-Tracker</span>\r\n        </a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n       </button>\r\n       <div className=\"collapse navbar-collapse blue lighten-1\" id=\"navbarNav\" >\r\n      <ul className=\"navbar-nav ml-auto \" >\r\n      <li className=\"nav-item active\">\r\n        <NavLink to='/'><i className=\"material-icons left\">home</i>Home</NavLink><span className=\"sr-only\">(current)</span>\r\n      </li>\r\n      <li className=\"nav-item \">\r\n        <NavLink to='/Weather'><i className=\"material-icons left\">cloud</i>Weather</NavLink>\r\n      </li>\r\n      </ul>\r\n    </div>\r\n   </nav>\r\n    //     <nav>\r\n    //         <div className=\"nav-wrapper blue lighten-2\">\r\n                \r\n    //             <a href=\"#\" className=\"brand-logo\" style={{textAlign:'center'}}><img style={{float:'left'}} src=\"https://img.icons8.com/nolan/64/coronavirus.png\" alt=\"\"/><span style={{float:'left'}}>Covid-19 Tracker</span></a>\r\n    //             <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down \">\r\n    //                 <li><NavLink to='/' className=\"active\"><i className=\"material-icons left\">home</i>Home</NavLink></li>\r\n    //                 <li><NavLink to='/Weather'><i className=\"material-icons left\">cloud</i>Weather</NavLink></li>\r\n    //             </ul>\r\n                \r\n    //         </div>\r\n    //   </nav>\r\n      \r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","import React,{Component} from 'react';\r\nimport Cards from './Cards/Cards';\r\nimport Charts from './Chart/Chart';\r\nimport CountryPicker from './CountryPicker/CountryPicker';\r\nimport styles from './Home.module.css';\r\nimport axios from 'axios';\r\nimport Navbar from './Navbar';\r\n\r\nclass Home extends Component {\r\n    state = {\r\n        country:{},\r\n        date:''\r\n    }\r\n    componentDidMount(){\r\n        let id = this.props.match.params.id;\r\n        axios.get('https://api.covid19api.com/summary')\r\n        .then(response =>{\r\n            console.log(response.data.Countries);\r\n        this.setState({country:response.data.Global,date:response.data.Countries[0].Date})\r\n        })}\r\n    \r\n    render(){\r\n        const { country,date} = this.state;\r\n        return(\r\n            <div className={styles.container}>\r\n                <Navbar></Navbar>\r\n                <br></br>\r\n                <h2 className={styles.heading}>Global</h2>\r\n                <Cards data={this.state}></Cards>\r\n                <h4 className={styles.countries}>Countries</h4>\r\n                <CountryPicker></CountryPicker>\r\n                <h4 className={styles.stats}>Statistics</h4>\r\n                <Charts></Charts>\r\n                \r\n            </div>\r\n        );\r\n    \r\n    }\r\n}\r\n\r\nexport default Home;","import React from 'react';\r\nimport 'weather-icons/css/weather-icons.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport cx from 'classnames';\r\nimport {format} from 'date-fns';\r\nimport cloudy from '../pictures/Clouds.jpg';\r\nimport drizzle from '../pictures/drizzle.jpg';\r\nimport foggy from '../pictures/foggy.jpg';\r\nimport rain from '../pictures/rain.jpg';\r\nimport sunny from '../pictures/sunny.jpg';\r\nimport snow from '../pictures/snow.jpg';\r\nimport thunderstorm from '../pictures/thunderstorm.jpg';\r\nimport styles from './ForeCast.module.css';\r\nimport { Card,CardContent,Typography,Grid,CardActionArea,CardMedia,Box,CardHeader} from '@material-ui/core';\r\n\r\nconst ForeCast = ({data:{temperature,city,country,humidity,\r\n    pressure,error,icon, image,minTemp,maxTemp,feels,description,date,rain,\r\n    cloudiness,visibility,sunrise,sunset,windSpeed,windDirection,color,clicked}}) => {\r\n    console.log(error);\r\n    \r\n   \r\n    if(!temperature){\r\n        if(error){\r\n            return(\r\n                <div style={{color:'red',marginLeft:'-150px'}}>{error}</div>\r\n            )\r\n        }else{\r\n            return(\r\n                <div></div>\r\n            )\r\n        }}\r\n\r\n    return(\r\n       <div className='container'>\r\n            \r\n           <Grid container spacing={4} justify='center'>\r\n                <Grid item component={Card} xs={12}  md={5} style={{position:'relative',backgroundColor:'whitesmoke',borderBottom:'10px solid' + color }} className={styles.card} >\r\n                    <CardActionArea style={{display:'flex',justifyContent:'center'}}>\r\n\r\n                        <CardMedia component='img' height='600' src={image} title='lorem ipsum' ></CardMedia>\r\n                        <Box  style={{position:'absolute',top:'10px'}} fontWeight={700} fontSize='h5.fontSize'>{city}</Box>\r\n                        <Box  style={{position:'absolute',top:'55px'}} fontWeight={500} fontSize='h6.fontSize'>{ Date(date).toString().slice(0,15)}</Box>\r\n                        \r\n                        <Typography  style={{position:'absolute',top:'145px',color:'white'}} variant='h1'>{temperature}&deg;c</Typography>\r\n                        <Box  fontStyle='italic'fontSize='h5.fontSize'style={{position:'absolute',top:'265px'}} fontWeight={500}>Feels like</Box>\r\n                        <Box  fontStyle='italic'fontSize='h3.fontSize' style={{position:'absolute',top:'285px',color:'#f5f5f5'}}>{feels}&deg;</Box>\r\n                        \r\n                    </CardActionArea>\r\n                 </Grid>\r\n                    <Grid item component={Card} xs={12}  md={5} style={{position:'relative',backgroundColor:'whitesmoke',borderBottom:'10px solid' + color}} className={styles.card} >\r\n                        <CardActionArea gutterBottom style={{margin:'10px 0'}}>\r\n                        <Box  fontWeight={700} fontSize='h5.fontSize'gutterBottom >{`${description.charAt(0).toUpperCase() + description.slice(1)}`}</Box>\r\n\r\n                        </CardActionArea >\r\n                        <CardActionArea gutterbottom style={{ backgroundColor:color}}>\r\n                            <h1 style={{margin:'50px',color:'white'}}><i className={`wi ${icon} display-1`}></i></h1>\r\n                        </CardActionArea>\r\n\r\n                        <CardContent>\r\n                            <Grid container spacing={4} justify='center'>\r\n                                <Grid item>\r\n                                    <span><Typography color='textSecondary' style={{display:'inline-block'}}>Max Temp:&nbsp;&nbsp;</Typography></span>\r\n                                    <span><Typography  variant='h5' style={{display:'inline-block'}}>{maxTemp}&deg;c</Typography></span>\r\n                                    &nbsp;&nbsp;\r\n                                    <span><Typography color='textSecondary' gutterBottom style={{display:'inline-block'}}>Min Temp:&nbsp;&nbsp;</Typography></span>\r\n                                    <span><Typography  variant='h5'style={{display:'inline-block'}}>{minTemp}&deg;c</Typography></span>\r\n                                \r\n                                </Grid>\r\n                                    \r\n\r\n                                <Grid item>\r\n                                    <span><Typography color='textSecondary' gutterBottom style={{display:'inline-block'}}>Humidity:&nbsp;&nbsp;</Typography></span>\r\n                                    <span><Typography  variant='h5' style={{display:'inline-block'}}>{humidity}</Typography>&#37;</span>\r\n                                    &nbsp;&nbsp;\r\n                                    <span><Typography color='textSecondary' style={{display:'inline-block'}}>Pressure:&nbsp;&nbsp;</Typography></span>\r\n                                    <span><Typography  variant='h5' style={{display:'inline-block'}}>{pressure}</Typography>&nbsp;hPa</span>\r\n                                </Grid>\r\n\r\n                                <Grid item >\r\n                                    <span><Typography color='textSecondary' style={{display:'inline-block'}}>Wind Direction:&nbsp;&nbsp;</Typography></span>\r\n                                    <span><Typography  variant='h5' style={{display:'inline-block'}}>{windDirection}&nbsp;&deg;</Typography></span>\r\n                                    &nbsp;&nbsp;\r\n                                    <span><Typography color='textSecondary' style={{display:'inline-block'}}>Wind Speed:&nbsp;&nbsp;</Typography></span>\r\n                                    <span><Typography  variant='h5'  style={{display:'inline-block'}}>{windSpeed}</Typography>&nbsp;m/sec</span>\r\n                                \r\n                                </Grid>\r\n                                    \r\n\r\n                                <Grid item>\r\n                                    <span><Typography color='textSecondary' style={{display:'inline-block'}}>Cloudiness:&nbsp;&nbsp;</Typography></span>\r\n                                    <span><Typography  variant='h5' style={{display:'inline-block'}}>{cloudiness}</Typography>&#37;</span>\r\n                                    &nbsp;&nbsp;\r\n                                    <span><Typography color='textSecondary'  style={{display:'inline-block'}}>Visibility:&nbsp;&nbsp;</Typography></span>\r\n                                    <span><Typography  variant='h5'  style={{display:'inline-block'}}>{visibility}</Typography>&nbsp;meters</span>\r\n                                   \r\n                                </Grid>\r\n                                <Grid item>\r\n                                     <span><Typography color='textSecondary'  style={{display:'inline-block'}}>Sunrise:&nbsp;&nbsp;</Typography></span>\r\n                                    <span><Typography  variant='h5' style={{display:'inline-block'}}>{ new Date(sunrise).toString().slice(15,24)} am</Typography></span>\r\n                                    &nbsp;&nbsp;\r\n                                    <span><Typography color='textSecondary'  style={{display:'inline-block'}}>Sunset:&nbsp;&nbsp;</Typography></span>\r\n                                    <span><Typography  variant='h5' style={{display:'inline-block'}}>{new Date(sunset).toString().slice(15,24) } pm</Typography></span>\r\n                               \r\n                                </Grid>\r\n                            </Grid>\r\n                    </CardContent>\r\n                </Grid>\r\n            </Grid>\r\n           {/* <div className='cards pt-4'>\r\n           {city && <h3>Location:{city}</h3>}\r\n           <h1 className='py-4'>\r\n           <i className={`wi ${icon} display-1`}></i>\r\n           </h1>\r\n            \r\n            {temperature && <h5 className='py-2'>Temperature:{temperature}&deg;</h5>}\r\n            {minTemp && <span className='px-4'>Min:{minTemp}&deg;</span>}\r\n            {maxTemp && <span className='px-4'>Max:{maxTemp}&deg;</span>}\r\n            \r\n            {humidity  && <p>Humidity:{humidity}</p>}\r\n            {pressure && <p>Pressure:{pressure}</p>}\r\n            {error && <div className='alert alert-danger mx-5' role='alert'>{error}</div>}\r\n     */}\r\n        \r\n        \r\n       </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ForeCast;","import React from 'react';\r\nimport {NavLink} from 'react-router-dom';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nconst Navbar = () =>{\r\n    return(\r\n        <nav className=\"navbar navbar-expand-lg navbar-light blue lighten-1\" style={{height:'90px'}}>\r\n        <a className=\"navbar-brand text-white display-6\" href=\"#\"> \r\n        <img src=\"https://img.icons8.com/nolan/64/cloud.png\" className=\"d-inline-block align-top\" alt=\"\" /><span style={{fontSize:'25px'}}>Weather-Tracker</span>\r\n        </a>\r\n        <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\" aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n       </button>\r\n       <div className=\"collapse navbar-collapse blue lighten-1\" id=\"navbarNav\" >\r\n      <ul className=\"navbar-nav ml-auto \" >\r\n      <li className=\"nav-item\">\r\n        <NavLink to='/'><i className=\"material-icons left\">home</i>Home</NavLink><span className=\"sr-only\">(current)</span>\r\n      </li>\r\n      <li className=\"nav-item active \">\r\n        <NavLink to='/Weather'><i className=\"material-icons left\">cloud</i>Weather</NavLink>\r\n      </li>\r\n      </ul>\r\n    </div>\r\n   </nav>\r\n    //     <nav>\r\n    //         <div className=\"nav-wrapper blue lighten-2\">\r\n                \r\n    //             <a href=\"#\" className=\"brand-logo\" style={{textAlign:'center'}}><img style={{float:'left'}} src=\"https://img.icons8.com/nolan/64/cloud.png\"/><span style={{float:'left'}}>Weather Tracker</span></a>\r\n    //             <ul id=\"nav-mobile\" className=\"right hide-on-med-and-down \">\r\n    //                 <li><NavLink to='/' className=\"active\"><i className=\"material-icons left\">home</i>Home</NavLink></li>\r\n    //             </ul>\r\n                \r\n    //         </div>\r\n    //   </nav>\r\n      \r\n    )\r\n\r\n}\r\n\r\nexport default Navbar;","import React from 'react';\r\nimport styles from './Weather-Form.module.css';\r\n\r\n\r\nconst WeatherForm=(props)=>{\r\n    return(\r\n        <div className='container '>\r\n             \r\n            <form  onSubmit={props.loadweather} >\r\n            <div className='row' style={{contentAlign:'center'}}>\r\n                <div className ='col-md-4 offset-md-3'>\r\n                    <input  autoComplete='off'  className ='form-control'type=\"text\" name=\"city\" value={props.loadweather.City} placeholder=\"Choose a city\" />\r\n                </div>\r\n                <div className='col-md-3 mt-md-0 text-md-left'>\r\n                    <button className='btn btn-info blue' >Search</button>\r\n                </div>\r\n            \r\n            </div>\r\n            </form>\r\n            \r\n            \r\n        </div>\r\n        \r\n    )\r\n}\r\nexport default WeatherForm;","import React, { Component } from 'react';\r\nimport styles from './Weather.module.css';\r\nimport axios from 'axios';\r\nimport ForeCast from './ForeCast/ForeCast';\r\nimport WeatherNav from './WeatherNav';\r\nimport WeatherForm from './Weather-Form/WeatherForm';\r\nimport 'weather-icons/css/weather-icons.css';\r\nimport 'bootstrap/dist/css/bootstrap.min.css';\r\nimport cloudy from './pictures/Clouds.jpg';\r\nimport drizzle from './pictures/drizzle.jpg';\r\nimport foggy from './pictures/foggy.jpg';\r\nimport rain from './pictures/rain.jpg';\r\nimport sunny from './pictures/sunny.jpg';\r\nimport snow from './pictures/snow.jpg';\r\nimport thunderstorm from './pictures/thunderstorm.jpg';\r\n\r\n\r\nconst api_key='65ccf1982f0663d791aa5b0f4c262250';\r\nconst api_base='https://api.openweathermap.org/data/2.5/';\r\nconst weatherIcon={\r\n    ThunderStorm:'wi-thunderstorm',\r\n    Drizzle:'wi-sleet',\r\n    Rain:'wi-storm-showers',\r\n    Snow:'wi-snow',\r\n    Atmosphere:'wi-fog',\r\n    Clear:'wi-day-sunny',\r\n    Clouds:'wi-day-fog'\r\n\r\n};\r\n\r\nclass Weather extends Component {\r\n\r\n    state={\r\n        city:'',country:'', temperature:'',\r\n        humidity:'',pressure:'',minTemp:'',maxTemp:'',\r\n        feels:'',date:'',rain:'',sunrise:'',sunset:'',\r\n        visibility:'', description:'',error:'',\r\n         icon:'', windDirection:'', windSpeed:'',cloudiness:'',image:'',color:'',clicked:false\r\n    }\r\n    \r\n    \r\n    \r\n    handleChange=(e)=>{\r\n        let City=e.target.city.value;\r\n        e.preventDefault();\r\n        console.log(City);\r\n        this.fetchdata(City);\r\n        this.setState({clicked:true})\r\n        e.target.city.value=null;\r\n\r\n    }\r\n\r\n    get_WeatherIcon=(rangeId)=>{\r\n        switch(true){\r\n            case rangeId>=200 && rangeId <=232:\r\n                this.setState({icon:weatherIcon.ThunderStorm ,image:thunderstorm ,color:'#d1c4e9'});\r\n                break;\r\n            case rangeId>=300 && rangeId <=221:\r\n                this.setState({icon:weatherIcon.Drizzle ,image:drizzle, color:'#80cbc4'});\r\n                break;\r\n            case rangeId>=500 && rangeId <=531:\r\n                this.setState({icon:weatherIcon.Rain,image:rain, color:'#b0bec5'});\r\n                break;\r\n            case rangeId>=600 && rangeId <=622:\r\n                this.setState({icon:weatherIcon.Snow ,image:snow ,color:'#bdbdbd'});\r\n                break;           \r\n            case rangeId>=700 && rangeId <=781:\r\n                this.setState({icon:weatherIcon.Atmosphere,image:foggy, color:'#dcdbdf'});\r\n                break;           \r\n            case rangeId===800:\r\n                this.setState({icon:weatherIcon.Clear,image:sunny,color:'#81d4fa'});\r\n                break;           \r\n            case rangeId>=801 && rangeId <=804:\r\n                this.setState({icon:weatherIcon.Clouds,image:cloudy,color:'#607d8b' });\r\n                break; \r\n            default:\r\n                this.setState({icon:weatherIcon.Clouds,image:cloudy ,color:'#607d8b'});           \r\n        }\r\n\r\n    }\r\n\r\n\r\n    fetchdata = async(City)=> \r\n    {   try {\r\n        const response=await axios.get(`https://cors-anywhere.herokuapp.com/${api_base}weather?q=${City}&units=metric&appid=${api_key}`);\r\n        console.log(response.data);\r\n        if(response.data && City){\r\n        this.setState({\r\n            city:response.data.name,\r\n            country:response.data.sys.country,\r\n            temperature:response.data.main.temp,\r\n            minTemp:response.data.main.temp_min,\r\n            maxTemp:response.data.main.temp_max,\r\n            feels:response.data.main.feels_like,\r\n            humidity:response.data.main.humidity,\r\n            pressure:response.data.main.pressure,\r\n            windSpeed:response.data.wind.speed,\r\n            windDirection:response.data.wind.deg,\r\n            visibility:response.data.visibility,\r\n            cloudiness:response.data.clouds.all,\r\n            sunset:response.data.sys.sunset,\r\n            sunrise:response.data.sys.sunrise,\r\n            description:response.data.weather[0].description,\r\n            date:response.data.dt,\r\n            error:''\r\n        })\r\n            this.get_WeatherIcon(response.data.weather[0].id);\r\n\r\n    }else{\r\n            this.setState({\r\n                \r\n                city:'',country:'', temperature:'',\r\n                humidity:'',pressure:'',minTemp:'',maxTemp:'',\r\n                feels:'',date:'',rain:'',sunrise:'',sunset:'',\r\n                visibility:'', description:'',\r\n                 icon:'', windDirection:'', windSpeed:'',cloudiness:'', image:'',\r\n            error:'Loading...'\r\n            })\r\n        }\r\n        \r\n    } catch (error) {\r\n        this.setState({\r\n            city:'',country:'', temperature:'',\r\n                humidity:'',pressure:'',minTemp:'',maxTemp:'',\r\n                feels:'',date:'',rain:'',sunrise:'',sunset:'',\r\n                visibility:'', description:'',\r\n                 icon:'', windDirection:'', windSpeed:'',cloudiness:'',image:'',error:'Please enter proper city name!'  \r\n            \r\n        })\r\n    } }\r\n\r\n\r\n    render(){\r\n        const{temperature,city,country,humidity,\r\n            pressure,error,icon, image,minTemp,\r\n            maxTemp,feels,description,date,rain,\r\n            cloudiness,visibility,sunrise,sunset,\r\n        windSpeed,windDirection,color,clicked}=this.state\r\n        return(\r\n            <div>\r\n            <WeatherNav></WeatherNav>\r\n            <div className={styles.container}>\r\n            <WeatherForm loadweather={this.handleChange}></WeatherForm>\r\n        <ForeCast data={this.state}></ForeCast>\r\n        </div>\r\n        </div>\r\n        );\r\n\r\n    }\r\n    \r\n\r\n}\r\n \r\nexport default Weather;","import React,{Component} from 'react';\r\nimport Cards from '../../components/Cards/Cards';\r\nimport styles from './Country.module.css';\r\nimport {Bar} from 'react-chartjs-2';\r\nimport axios from 'axios';\r\nimport Navbar from '../Navbar';\r\nclass Country extends Component {\r\n    state = {\r\n        country:{},\r\n        date:''\r\n    }\r\n    componentDidMount(){\r\n        let id = this.props.match.params.id;\r\n        axios.get('https://api.covid19api.com/summary')\r\n        .then(response =>{\r\n            console.log(response.data.Countries[id]);\r\n        this.setState({country:response.data.Countries[id],date:response.data.Countries[id].Date})\r\n        })\r\n    \r\n\r\n    }\r\n    render(){\r\n        console.log(this.props.match.params.id);\r\n        const { country ,date} = this.state;\r\n        const barChar=(\r\n            country \r\n            ? (<Bar \r\n            data={{\r\n                labels:['Infected','Recovered','Deaths'],\r\n                datasets:[{\r\n                    labels:'People',\r\n                    backgroundColor:['rgba(255,0,0,0.5)','rgba(0,255,0,0.5)','rgba(0,0,255,0.5)'],\r\n                    data:[country.TotalConfirmed,country.TotalRecovered,country.Totaldeaths]\r\n                }]\r\n\r\n            }}\r\n           options={{\r\n               legend:{display: false},\r\n               title:{display: true, text: `Current State in ${country.Country}`},\r\n           }}>\r\n\r\n        </Bar>):(<div>Loading...</div>)\r\n        );\r\n        \r\n\r\n        return(\r\n            <div className={styles.container}>\r\n                <Navbar></Navbar>\r\n                <h3 className={styles.heading}  style={{marginTop:'25px'}}>{country.Country}</h3>\r\n                <Cards data={this.state}></Cards>\r\n                <h4 className={styles.stats}>Statistics</h4>\r\n                <div className={styles.bbar} >{barChar}</div>\r\n                \r\n            </div>\r\n        );\r\n}}\r\n\r\nexport default Country;","import React , { Component } from 'react';\r\n\r\nimport Home from './components/Home';\r\nimport Weather from './components/Weather';\r\nimport { BrowserRouter,Route } from 'react-router-dom';\r\nimport Country from './components/Country/Country'\r\n\r\n\r\nclass App extends Component {\r\n  render(){\r\n    return (\r\n      <BrowserRouter>\r\n        <div>\r\n          \r\n          <Route exact path='/' component={Home}></Route>\r\n          <Route exact path='/Weather' component={Weather}></Route>\r\n          <Route path='/country/:id' component={Country}></Route>\r\n        </div>\r\n      </BrowserRouter>\r\n    );\r\n\r\n  }\r\n \r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"cards_container__15nmr\",\"card\":\"cards_card__2G__L\",\"infected\":\"cards_infected__1iUdE\",\"recovered\":\"cards_recovered__3kxJv\",\"deaths\":\"cards_deaths__2FTfT\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Home_container__28DwO\",\"heading\":\"Home_heading__1vYo8\",\"countries\":\"Home_countries__3uF9m\",\"stats\":\"Home_stats__2fFG9\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"bbar\":\"Country_bbar__3miV0\",\"heading\":\"Country_heading__1BrL-\",\"stats\":\"Country_stats__3Yh7J\"};","module.exports = __webpack_public_path__ + \"static/media/Clouds.83dd9350.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"country\":\"CountryPicker_country__3vqF6\"};","module.exports = __webpack_public_path__ + \"static/media/drizzle.ade49d8d.jpg\";","module.exports = __webpack_public_path__ + \"static/media/foggy.c27cc1c9.jpg\";","module.exports = __webpack_public_path__ + \"static/media/rain.6391e874.jpg\";","module.exports = __webpack_public_path__ + \"static/media/sunny.9163b11c.jpg\";","module.exports = __webpack_public_path__ + \"static/media/snow.28af8fbf.jpg\";","module.exports = __webpack_public_path__ + \"static/media/thunderstorm.de75e0d6.jpg\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"card\":\"ForeCast_card__38Aep\",\"container\":\"ForeCast_container__3IOuB\"};"],"sourceRoot":""}